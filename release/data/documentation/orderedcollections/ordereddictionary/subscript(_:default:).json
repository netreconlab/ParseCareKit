{
  "abstract" : [
    {
      "text" : "Accesses the value with the given key. If the dictionary doesn’t contain",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given key, accesses the provided default value as if the key and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "default value existed in the dictionary.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedDictionary"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedDictionary\/subscript(_:default:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "conformance" : {
      "availabilityPrefix" : [
        {
          "text" : "Available when",
          "type" : "text"
        }
      ],
      "conformancePrefix" : [
        {
          "text" : "Conforms when",
          "type" : "text"
        }
      ],
      "constraints" : [
        {
          "code" : "Key",
          "type" : "codeVoice"
        },
        {
          "text" : " conforms to ",
          "type" : "text"
        },
        {
          "code" : "Hashable",
          "type" : "codeVoice"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ]
    },
    "extendedModule" : "OrderedCollections",
    "externalID" : "s:18OrderedCollections0A10DictionaryV_7defaultq_x_q_yXKtcip",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "subscript"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:18OrderedCollections0A10DictionaryV3Keyxmfp",
        "text" : "Key"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "default"
      },
      {
        "kind" : "text",
        "text" : " _: () -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:18OrderedCollections0A10DictionaryV5Valueq_mfp",
        "text" : "Value"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:18OrderedCollections0A10DictionaryV5Valueq_mfp",
        "text" : "Value"
      }
    ],
    "modules" : [
      {
        "name" : "OrderedCollections"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Subscript",
    "symbolKind" : "subscript",
    "title" : "subscript(_:default:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "subscript"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "internalParam",
              "text" : "key"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:18OrderedCollections0A10DictionaryV3Keyxmfp",
              "text" : "Key"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "default"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "defaultValue"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "attribute",
              "text" : "@autoclosure"
            },
            {
              "kind" : "text",
              "text" : " () -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:18OrderedCollections0A10DictionaryV5Valueq_mfp",
              "text" : "Value"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:18OrderedCollections0A10DictionaryV5Valueq_mfp",
              "text" : "Value"
            },
            {
              "kind" : "text",
              "text" : " { "
            },
            {
              "kind" : "keyword",
              "text" : "get"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "set"
            },
            {
              "kind" : "text",
              "text" : " }"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The key the look up in the dictionary.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "key"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The default value to use if ",
                  "type" : "text"
                },
                {
                  "code" : "key",
                  "type" : "codeVoice"
                },
                {
                  "text" : " doesn’t exist in the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "dictionary.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "defaultValue"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The value associated with ",
              "type" : "text"
            },
            {
              "code" : "key",
              "type" : "codeVoice"
            },
            {
              "text" : " in the dictionary; otherwise,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "defaultValue",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this subscript when you want either the value for a particular key",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "or, when that key is not present in the dictionary, a default value. This",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "example uses the subscript with a message to use in case an HTTP response",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "code isn’t recognized:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "var responseMessages: OrderedDictionary = [",
            "    200: \"OK\",",
            "    403: \"Access forbidden\",",
            "    404: \"File not found\",",
            "    500: \"Internal server error\"]",
            "",
            "let httpResponseCodes = [200, 403, 301]",
            "for code in httpResponseCodes {",
            "    let message = responseMessages[code, default: \"Unknown response\"]",
            "    print(\"Response \\(code): \\(message)\")",
            "}",
            "\/\/ Prints \"Response 200: OK\"",
            "\/\/ Prints \"Response 403: Access forbidden\"",
            "\/\/ Prints \"Response 301: Unknown response\""
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "When a dictionary’s ",
              "type" : "text"
            },
            {
              "code" : "Value",
              "type" : "codeVoice"
            },
            {
              "text" : " type has value semantics, you can use this",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "subscript to perform in-place operations on values in the dictionary.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The following example uses this subscript while counting the occurrences",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "of each letter in a string:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let message = \"Hello, Elle!\"",
            "var letterCounts: OrderedDictionary<Character, Int> = [:]",
            "for letter in message {",
            "    letterCounts[letter, default: 0] += 1",
            "}",
            "\/\/ letterCounts == [\"H\": 1, \"e\": 2, \"l\": 4, \"o\": 1, ...]"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "When ",
              "type" : "text"
            },
            {
              "code" : "letterCounts[letter, defaultValue: 0] += 1",
              "type" : "codeVoice"
            },
            {
              "text" : " is executed with a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "value of ",
              "type" : "text"
            },
            {
              "code" : "letter",
              "type" : "codeVoice"
            },
            {
              "text" : " that isn’t already a key in ",
              "type" : "text"
            },
            {
              "code" : "letterCounts",
              "type" : "codeVoice"
            },
            {
              "text" : ", the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "specified default value (",
              "type" : "text"
            },
            {
              "code" : "0",
              "type" : "codeVoice"
            },
            {
              "text" : ") is returned from the subscript,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "incremented, and then added to the dictionary under that key.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Do not use this subscript to modify dictionary values if the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "dictionary’s ",
                  "type" : "text"
                },
                {
                  "code" : "Value",
                  "type" : "codeVoice"
                },
                {
                  "text" : " type is a class. In that case, the default value",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "and key are not written back to the dictionary after an operation. (For",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "a variant of this operation that supports this usecase, see",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "updateValue(forKey:default:_:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".)",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Looking up values in the dictionary through this subscript",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "has an expected complexity of O(1) hashing\/comparison operations on",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "average, if ",
                  "type" : "text"
                },
                {
                  "code" : "Key",
                  "type" : "codeVoice"
                },
                {
                  "text" : " implements high-quality hashing. Updating the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "dictionary also has an amortized expected complexity of O(1) –",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "although individual updates may need to copy or resize the dictionary’s",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "underlying storage.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Complexity",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/orderedcollections\/ordereddictionary\/subscript(_:default:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "OrderedCollections",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedDictionary": {
  "abstract" : [
    {
      "text" : "An ordered collection of key-value pairs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OrderedDictionary"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedDictionary",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OrderedDictionary"
    }
  ],
  "role" : "symbol",
  "title" : "OrderedDictionary",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/ordereddictionary"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedDictionary/subscript(_:default:)": {
  "abstract" : [
    {
      "text" : "Accesses the value with the given key. If the dictionary doesn’t contain",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given key, accesses the provided default value as if the key and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "default value existed in the dictionary.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Key",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A10DictionaryV3Keyxmfp",
      "text" : "Key"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "default"
    },
    {
      "kind" : "text",
      "text" : " _: () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A10DictionaryV5Valueq_mfp",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A10DictionaryV5Valueq_mfp",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedDictionary\/subscript(_:default:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(_:default:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/ordereddictionary\/subscript(_:default:)"
}
}
}