{
  "abstract" : [
    {
      "text" : "An ordered collection of unique elements.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:18OrderedCollections0A3SetV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OrderedSet"
      }
    ],
    "modules" : [
      {
        "name" : "OrderedCollections"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "OrderedSet"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "OrderedSet"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@frozen"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "OrderedSet"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SH",
              "text" : "Hashable"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Similar to the standard ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : ", ordered sets ensure that each element appears",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "only once in the collection, and they provide efficient tests for",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "membership. However, like ",
              "type" : "text"
            },
            {
              "code" : "Array",
              "type" : "codeVoice"
            },
            {
              "text" : " (and unlike ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : "), ordered sets maintain",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "their elements in a particular user-specified order, and they support",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "efficient random-access traversal of their members.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " is a useful alternative to ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : " when the order of elements is",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "important, or when you need to be able to efficiently access elements at",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "various positions within the collection. It can also be used instead of an",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "Array",
              "type" : "codeVoice"
            },
            {
              "text" : " when each element needs to be unique, or when you need to be able to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "quickly determine if a value is a member of the collection.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can create an ordered set with any element type that conforms to the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "Hashable",
              "type" : "codeVoice"
            },
            {
              "text" : " protocol.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let buildingMaterials: OrderedSet = [\"straw\", \"sticks\", \"bricks\"]"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "anchor" : "Equality-of-Ordered-Sets",
          "level" : 1,
          "text" : "Equality of Ordered Sets",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Two ordered sets are considered equal if they contain the same elements, and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "in the same order",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : ". This matches the concept of equality of an ",
              "type" : "text"
            },
            {
              "code" : "Array",
              "type" : "codeVoice"
            },
            {
              "text" : ", and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "it is different from the unordered ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let a: OrderedSet = [1, 2, 3, 4]",
            "let b: OrderedSet = [4, 3, 2, 1]",
            "a == b \/\/ false",
            "b.sort() \/\/ `b` now has value [1, 2, 3, 4]",
            "a == b \/\/ true"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "anchor" : "Set-Operations",
          "level" : 1,
          "text" : "Set Operations",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " implements most, but not all, ",
              "type" : "text"
            },
            {
              "code" : "SetAlgebra",
              "type" : "codeVoice"
            },
            {
              "text" : " requirements. In",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "particular, it supports the membership test ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/contains(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " as well as all",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "high-level set operations such as ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/union(_:)-67y2h",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/intersection(_:)-4o09a",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSubset(of:)-ptij",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "buildingMaterials.contains(\"glass\") \/\/ false",
            "buildingMaterials.intersection([\"bricks\", \"straw\"]) \/\/ [\"straw\", \"bricks\"]"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Operations that return an ordered set usually preserve the ordering of",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "elements in their input. For example, in the case of the ",
              "type" : "text"
            },
            {
              "code" : "intersection",
              "type" : "codeVoice"
            },
            {
              "text" : " call",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "above, the ordering of elements in the result is guaranteed to match their",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "order in the first input set, ",
              "type" : "text"
            },
            {
              "code" : "buildingMaterials",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "On the other hand, predicates such as ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSubset(of:)-ptij",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " tend to ignore",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "element ordering:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let moreMaterials: OrderedSet = [\"bricks\", \"glass\", \"sticks\", \"straw\"]",
            "buildingMaterials.isSubset(of: moreMaterials) \/\/ true"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " does not implement ",
              "type" : "text"
            },
            {
              "code" : "insert(_:)",
              "type" : "codeVoice"
            },
            {
              "text" : " nor ",
              "type" : "text"
            },
            {
              "code" : "update(with:)",
              "type" : "codeVoice"
            },
            {
              "text" : " from",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "SetAlgebra",
              "type" : "codeVoice"
            },
            {
              "text" : " – it provides its own variants for insertion that are more",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "explicit about where in the collection new elements gets inserted:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "func append(_ item: Element) -> (inserted: Bool, index: Int)",
            "func insert(_ item: Element, at index: Int) -> (inserted: Bool, index: Int)",
            "func updateOrAppend(_ item: Element) -> Element?",
            "func updateOrInsert(_ item: Element, at index: Int) -> (originalMember: Element?, index: Int)",
            "func update(_ item: Element, at index: Int) -> Element"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Additionally,",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " has an order-sensitive definition of equality (see",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "above) that is incompatible with ",
              "type" : "text"
            },
            {
              "code" : "SetAlgebra",
              "type" : "codeVoice"
            },
            {
              "text" : "’s documented semantic",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "requirements. Accordingly, ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " does not (cannot) itself conform to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "SetAlgebra",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Unordered-Set-View",
          "level" : 1,
          "text" : "Unordered Set View",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For cases where ",
              "type" : "text"
            },
            {
              "code" : "SetAlgebra",
              "type" : "codeVoice"
            },
            {
              "text" : " conformance is desired (such as when passing an",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "ordered set to a function that is generic over that protocol), ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "provides an efficient ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "unordered view",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " of its elements that conforms to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "SetAlgebra",
              "type" : "codeVoice"
            },
            {
              "text" : ". This view is accessed through the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/unordered",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " property, and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "it implements the same concept of equality as the standard ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : ", ignoring",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "element ordering.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "var a: OrderedSet = [0, 1, 2, 3]",
            "let b: OrderedSet = [3, 2, 1, 0]",
            "a == b \/\/ false",
            "a.unordered == b.unordered \/\/ true",
            "",
            "func frobnicate<S: SetAlgebra>(_ set: S) { ... }",
            "frobnicate(a) \/\/ error: `OrderedSet<String>` does not conform to `SetAlgebra`",
            "frobnicate(a.unordered) \/\/ OK"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The unordered view is mutable. Insertions into it implicitly append new",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "elements to the end of the collection.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "buildingMaterials.unordered.insert(\"glass\") \/\/ => inserted: true",
            "\/\/ buildingMaterials is now [\"straw\", \"sticks\", \"bricks\", \"glass\"]"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Accessing the unordered view is an efficient operation, with constant",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "(minimal) overhead. Direct mutations of the unordered view (such as the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "insertion above) are executed in place when possible. However, as usual with",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "copy-on-write collections, if you make a copy of the view (such as by",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "extracting its value into a named variable), the resulting values will share",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the same underlying storage, so mutations of either will incur a copy of the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "whole set.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Sequence-and-Collection-Operations",
          "level" : 1,
          "text" : "Sequence and Collection Operations",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Ordered sets are random-access collections. Members are assigned integer",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "indices, with the first element always being at index ",
              "type" : "text"
            },
            {
              "code" : "0",
              "type" : "codeVoice"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let buildingMaterials: OrderedSet = [\"straw\", \"sticks\", \"bricks\"]",
            "buildingMaterials[1] \/\/ \"sticks\"",
            "buildingMaterials.firstIndex(of: \"bricks\") \/\/ 2",
            "",
            "for i in 0 ..< buildingMaterials.count {",
            "  print(\"Little piggie #\\(i) built a house of \\(buildingMaterials[i])\")",
            "}",
            "\/\/ Little piggie #0 built a house of straw",
            "\/\/ Little piggie #1 built a house of sticks",
            "\/\/ Little piggie #2 built a house of bricks"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Because ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " needs to keep its members unique, it cannot conform to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the full ",
              "type" : "text"
            },
            {
              "code" : "MutableCollection",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : "RangeReplaceableCollection",
              "type" : "codeVoice"
            },
            {
              "text" : " protocols.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Operations such as ",
              "type" : "text"
            },
            {
              "code" : "MutableCollection",
              "type" : "codeVoice"
            },
            {
              "text" : "’s subscript setter or",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "RangeReplaceableCollection",
              "type" : "codeVoice"
            },
            {
              "text" : "’s ",
              "type" : "text"
            },
            {
              "code" : "replaceSubrange",
              "type" : "codeVoice"
            },
            {
              "text" : " method assume the ability",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to insert\/replace arbitrary elements in the collection, but allowing that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "could lead to duplicate values.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "However, ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " is able to partially implement these two protocols;",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "namely, it supports mutation operations that merely change the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "order of elements (such as ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/sort()",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/swapAt(_:_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", or just remove",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "some subset of existing members (such as ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/remove(at:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " or",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeAll(where:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ").",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Accordingly, ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " provides permutation operations from ",
              "type" : "text"
            },
            {
              "code" : "MutableCollection",
              "type" : "codeVoice"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/swapAt(_:_:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/partition(by:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/sort()",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/sort(by:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/shuffle()",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/shuffle(using:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/reverse()",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "It also supports removal operations from ",
              "type" : "text"
            },
            {
              "code" : "RangeReplaceableCollection",
              "type" : "codeVoice"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeAll(keepingCapacity:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/remove(at:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeSubrange(_:)-2fqke",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeSubrange(_:)-62u6a",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeLast()",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeLast(_:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeFirst()",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeFirst(_:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeAll(where:)",
                      "isActive" : true,
                      "type" : "reference"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " also implements ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/reserveCapacity(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " from",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "RangeReplaceableCollection",
              "type" : "codeVoice"
            },
            {
              "text" : ", to allow for efficient insertion of a known",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "number of elements. (However, unlike ",
              "type" : "text"
            },
            {
              "code" : "Array",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " does",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "not provide a ",
              "type" : "text"
            },
            {
              "code" : "capacity",
              "type" : "codeVoice"
            },
            {
              "text" : " property.)",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Accessing-The-Contents-of-an-Ordered-Set-as-an-Array",
          "level" : 1,
          "text" : "Accessing The Contents of an Ordered Set as an Array",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "In cases where you need to pass the contents of an ordered set to a function",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "that only takes an array value or (or something that’s generic over",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "RangeReplaceableCollection",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : "MutableCollection",
              "type" : "codeVoice"
            },
            {
              "text" : "), then the best option",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "is usually to directly extract the members of the ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " as an ",
              "type" : "text"
            },
            {
              "code" : "Array",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "value using its ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/elements",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " property. ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " uses a standard array",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "value for element storage, so extracting the array value has minimal",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "overhead.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "func pickyFunction(_ items: Array<Int>)",
            "",
            "var set: OrderedSet = [0, 1, 2, 3]",
            "pickyFunction(set) \/\/ error",
            "pickyFunction(set.elements) \/\/ OK"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "It is also possible to mutate the set by updating the value of the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/elements",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " property. This guarantees that direct mutations happen in place",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "when possible (i.e., without spurious copy-on-write copies).",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "However, the set needs to ensure the uniqueness of its members, so every",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "update to ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/elements",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " includes a postprocessing step to detect and remove",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "duplicates over the entire array. This can be slower than doing the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "equivalent updates with direct ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " operations, so updating",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/elements",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " is best used in cases where direct implementations aren’t",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "available – for example, when you need to call a ",
              "type" : "text"
            },
            {
              "code" : "MutableCollection",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "algorithm that isn’t directly implemented by ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " itself.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Performance",
          "level" : 1,
          "text" : "Performance",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "An ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " stores its members in a standard ",
              "type" : "text"
            },
            {
              "code" : "Array",
              "type" : "codeVoice"
            },
            {
              "text" : " value (exposed by",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/elements",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " property). It also maintains a separate hash table",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "containing array indices into this array; this hash table is used to ensure",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "member uniqueness and to implement fast membership tests.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Element-Lookups",
          "level" : 2,
          "text" : "Element Lookups",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Like the standard ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : ", looking up a member is expected to execute",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "a constant number of hashing and equality check operations. To look up",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "an element, ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " generates a hash value from it, and then finds a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "set of array indices within the hash table that could potentially contain",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the element we’re looking for. By looking through these indices in the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "storage array, ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " is able to determine if the element is a member.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "As long as ",
              "type" : "text"
            },
            {
              "code" : "Element",
              "type" : "codeVoice"
            },
            {
              "text" : " properly implements hashing, the size of this set of",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "candidate indices is expected to have a constant upper bound, so looking up",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "an item will be a constant operation.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Appending-New-Items",
          "level" : 2,
          "text" : "Appending New Items",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Similarly, appending a new element to the end of an ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " is expected",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to require amortized O(1) hashing\/comparison\/copy operations on the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "element type, just like inserting an item into a standard ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "(If the ordered set value has multiple copies, then appending an item will",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "need to copy all its items into unique storage (again just like the standard",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : ") – but once the set has been uniqued, additional appends will only",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "perform a constant number of operations, so when averaged over many appends,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the overall complexity comes out as O(1).)",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Removing-Items-and-Inserting-in-Places-Other-Than-the-End",
          "level" : 2,
          "text" : "Removing Items and Inserting in Places Other Than the End",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Unfortunately, ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " does not emulate ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : "’s performance for all",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "operations. In particular, operations that insert or remove elements at the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "front or in the middle of an ordered set are generally expected to be",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "significantly slower than with ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : ". To perform these operations, an",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " needs to perform the corresponding operation in the storage",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "array, and then it needs to renumber all subsequent members in the hash",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "table. Both of these phases take a number of steps that grows linearly with",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the size of the ordered set, while the standard ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : " can do the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "corresponding operations with O(1) expected complexity.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "This generally makes ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " a poor replacement to ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : " in use cases",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "that do not specifically require a particular element ordering.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Memory-Utilization",
          "level" : 2,
          "text" : "Memory Utilization",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The hash table in an ordered set never needs to store larger indices than",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the current size of the storage array, and ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " makes use of this",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "observation to reduce the number of bits it uses to encode these integer",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "values. Additionally, the actual hashed elements are stored in a flat array",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "value rather than the hash table itself, so they aren’t subject to the hash",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "table’s strict maximum load factor. These two observations combine to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "optimize the memory utilization of ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : ", sometimes making it even",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "more efficient than the standard ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : " – despite the additional",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "functionality of preserving element ordering.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Proper-Hashing-is-Crucial",
          "level" : 2,
          "text" : "Proper Hashing is Crucial",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Similar to the standard ",
              "type" : "text"
            },
            {
              "code" : "Set",
              "type" : "codeVoice"
            },
            {
              "text" : " type, the performance of hashing operations in",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "OrderedSet",
              "type" : "codeVoice"
            },
            {
              "text" : " is highly sensitive to the quality of hashing implemented by",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the ",
              "type" : "text"
            },
            {
              "code" : "Element",
              "type" : "codeVoice"
            },
            {
              "text" : " type. Failing to correctly implement hashing can easily lead",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to unacceptable performance, with the severity of the effect increasing with",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the size of the hash table.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In particular, if a certain set of elements all produce the same hash value,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "then hash table lookups regress to searching an element in an unsorted",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "array, i.e., a linear operation. To ensure hashed collection types exhibit",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "their target performance, it is important to ensure that such collisions",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "cannot be induced merely by adding a particular list of members to the set.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The easiest way to achieve this is to make sure ",
              "type" : "text"
            },
            {
              "code" : "Element",
              "type" : "codeVoice"
            },
            {
              "text" : " implements hashing",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "following ",
              "type" : "text"
            },
            {
              "code" : "Hashable",
              "type" : "codeVoice"
            },
            {
              "text" : "’s documented best practices. The ",
              "type" : "text"
            },
            {
              "code" : "Element",
              "type" : "codeVoice"
            },
            {
              "text" : " type must",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "implement the ",
              "type" : "text"
            },
            {
              "code" : "hash(into:)",
              "type" : "codeVoice"
            },
            {
              "text" : " requirement (not ",
              "type" : "text"
            },
            {
              "code" : "hashValue",
              "type" : "codeVoice"
            },
            {
              "text" : ") in such a way that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "every bit of information that is compared in ",
              "type" : "text"
            },
            {
              "code" : "==",
              "type" : "codeVoice"
            },
            {
              "text" : " is fed into the supplied",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "Hasher",
              "type" : "codeVoice"
            },
            {
              "text" : " value. When used correctly, ",
              "type" : "text"
            },
            {
              "code" : "Hasher",
              "type" : "codeVoice"
            },
            {
              "text" : " produces high-quality,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "randomly seeded hash values that prevent repeatable hash collisions and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "therefore avoid (intentional or accidental) denial of service attacks.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Like with all hashed collection types, all complexity guarantees are null",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and void if ",
              "type" : "text"
            },
            {
              "code" : "Element",
              "type" : "codeVoice"
            },
            {
              "text" : " implements ",
              "type" : "text"
            },
            {
              "code" : "Hashable",
              "type" : "codeVoice"
            },
            {
              "text" : " incorrectly. In the worst case,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the hash table can regress into a particularly slow implementation of an",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "unsorted array, with even basic lookup operations taking complexity",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "proportional to the size of the set.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SK",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/Sl",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s28CustomDebugStringConvertibleP",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s17CustomReflectableP",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s23CustomStringConvertibleP",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/Se",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SE",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SQ",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s25ExpressibleByArrayLiteralP",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SH",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/Sk",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s8SendableP",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/ST"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/UnorderedView"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-2d3a9",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-3d7qr",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-5zktd",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-68j7",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-7rt2h",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-8tli8",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-8zm9d",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(minimumCapacity:persistent:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(uncheckedUniqueElements:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/elements",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/unordered"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/append(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/append(contentsOf:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/applying(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/contains(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/difference(from:)-30bkk",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/filter(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/firstIndex(of:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formIntersection(_:)-2a4y4",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formIntersection(_:)-43o1u",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formIntersection(_:)-7odn2",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formSymmetricDifference(_:)-2ll2z",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formSymmetricDifference(_:)-391sm",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formSymmetricDifference(_:)-96csi",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formUnion(_:)-3dkzw",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formUnion(_:)-59end",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formUnion(_:)-6pksr",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/insert(_:at:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/intersection(_:)-4o09a",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/intersection(_:)-80md4",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/intersection(_:)-9yzg3",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isDisjoint(with:)-4tsmx",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isDisjoint(with:)-54iy6",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isDisjoint(with:)-6vmoh",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isDisjoint(with:)-7nqur",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isEqualSet(to:)-2bhxr",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isEqualSet(to:)-34yz0",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isEqualSet(to:)-6zqj7",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSubset(of:)-10abw",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSubset(of:)-4efhn",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSubset(of:)-8m21h",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSubset(of:)-9lv3x",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSuperset(of:)-3kfwa",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSuperset(of:)-5e6d5",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSuperset(of:)-7u97x",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSuperset(of:)-98d9s",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSubset(of:)-3mw6r",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSubset(of:)-8yb29",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSubset(of:)-9hxl4",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSubset(of:)-ptij",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSuperset(of:)-2bbv8",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSuperset(of:)-4rrsh",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSuperset(of:)-7oow7",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSuperset(of:)-7xvog",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/lastIndex(of:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/partition(by:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/remove(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/remove(at:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeAll(keepingCapacity:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeAll(where:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeFirst()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeFirst(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeLast()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeLast(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeSubrange(_:)-2fqke",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeSubrange(_:)-62u6a",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/reserveCapacity(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/reverse()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/shuffle()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/shuffle(using:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/sort()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/sort(by:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtract(_:)-3b6nj",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtract(_:)-9rtmd",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtract(_:)-9wmg8",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtracting(_:)-1gl4y",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtracting(_:)-5graf",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtracting(_:)-7kl8r",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/swapAt(_:_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/symmetricDifference(_:)-1810l",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/symmetricDifference(_:)-8dvm6",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/symmetricDifference(_:)-9huk7",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/union(_:)-2939h",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/union(_:)-3lt5i",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/union(_:)-67y2h",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/update(_:at:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/updateOrAppend(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/updateOrInsert(_:at:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/BidirectionalCollection-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Collection-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/CustomDebugStringConvertible-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/CustomReflectable-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/CustomStringConvertible-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Decodable-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Encodable-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Equatable-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/ExpressibleByArrayLiteral-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Hashable-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/RandomAccessCollection-Implementations",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Sequence-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/orderedcollections\/orderedset"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseCareKit/SE": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/SH": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/SK": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SK",
  "title" : "Swift.BidirectionalCollection",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/SQ": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/ST": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/ST",
  "title" : "Swift.Sequence",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/Se": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/Sk": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/Sk",
  "title" : "Swift.RandomAccessCollection",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/Sl": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/Sl",
  "title" : "Swift.Collection",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "OrderedCollections",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet": {
  "abstract" : [
    {
      "text" : "An ordered collection of unique elements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OrderedSet"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OrderedSet"
    }
  ],
  "role" : "symbol",
  "title" : "OrderedSet",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/BidirectionalCollection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/BidirectionalCollection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "BidirectionalCollection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/bidirectionalcollection-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/Collection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Collection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Collection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/collection-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/CustomDebugStringConvertible-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/CustomDebugStringConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomDebugStringConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/customdebugstringconvertible-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/CustomReflectable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/CustomReflectable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomReflectable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/customreflectable-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/CustomStringConvertible-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/CustomStringConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomStringConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/customstringconvertible-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/Decodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Decodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Decodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/decodable-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/Encodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Encodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Encodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/encodable-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/equatable-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/ExpressibleByArrayLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/ExpressibleByArrayLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByArrayLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/expressiblebyarrayliteral-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/Hashable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Hashable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Hashable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/hashable-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/RandomAccessCollection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/RandomAccessCollection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RandomAccessCollection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/randomaccesscollection-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/Sequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/Sequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Sequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/sequence-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/UnorderedView": {
  "abstract" : [
    {
      "text" : "An unordered view into an ordered set, providing ",
      "type" : "text"
    },
    {
      "code" : "SetAlgebra",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "conformance.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnorderedView"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/UnorderedView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnorderedView"
    }
  ],
  "role" : "symbol",
  "title" : "OrderedSet.UnorderedView",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/unorderedview"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/append(_:)": {
  "abstract" : [
    {
      "text" : "Append a new member to the end of the set, if the set doesn’t",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "already contain it.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "append"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> (inserted"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", index"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/append(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "append(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/append(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/append(contentsOf:)": {
  "abstract" : [
    {
      "text" : "Append the contents of a sequence to the end of the set, excluding",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "elements that are already members.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "append"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "contentsOf"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/append(contentsOf:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "append(contentsOf:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/append(contentsof:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/applying(_:)": {
  "abstract" : [
    {
      "text" : "Applies the given difference to this collection.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "applying"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s20CollectionDifferenceV",
      "text" : "CollectionDifference"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> `Self`"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/applying(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "applying(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/applying(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/contains(_:)": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the given element exists",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in the set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contains"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/contains(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contains(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/contains(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/difference(from:)-30bkk": {
  "abstract" : [
    {
      "text" : "Returns the collection difference between the parameter and the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "receiver, using an algorithm specialized to exploit fast membership",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "testing and the member uniqueness guarantees of ",
      "type" : "text"
    },
    {
      "code" : "OrderedSet",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "difference"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": `Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s20CollectionDifferenceV",
      "text" : "CollectionDifference"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/difference(from:)-30bkk",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "difference(from:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/difference(from:)-30bkk"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/elements": {
  "abstract" : [
    {
      "text" : "A view of the members of this set, as a regular array value.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "elements"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/elements",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "elements",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/elements"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/filter(_:)": {
  "abstract" : [
    {
      "text" : "Returns a new ordered set containing all the members of this ordered set",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "that satisfy the given predicate.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filter"
    },
    {
      "kind" : "text",
      "text" : "(("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/filter(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filter(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/filter(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/firstIndex(of:)": {
  "abstract" : [
    {
      "text" : "Returns the index of the given element in the set, or ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " if the element",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is not a member of the set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "firstIndex"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/firstIndex(of:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "firstIndex(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/firstindex(of:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/formIntersection(_:)-2a4y4": {
  "abstract" : [
    {
      "text" : "Removes the elements of this set that aren’t also in the given one.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formIntersection"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formIntersection(_:)-2a4y4",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formIntersection(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/formintersection(_:)-2a4y4"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/formIntersection(_:)-43o1u": {
  "abstract" : [
    {
      "text" : "Removes the elements of this set that aren’t also in the given one.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formIntersection"
    },
    {
      "kind" : "text",
      "text" : "(`Self`"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formIntersection(_:)-43o1u",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formIntersection(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/formintersection(_:)-43o1u"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/formIntersection(_:)-7odn2": {
  "abstract" : [
    {
      "text" : "Removes the elements of this set that aren’t also in the given sequence.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formIntersection"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formIntersection(_:)-7odn2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formIntersection(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/formintersection(_:)-7odn2"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/formSymmetricDifference(_:)-2ll2z": {
  "abstract" : [
    {
      "text" : "Replace this set with the elements contained in this set or the given",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "set, but not both.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formSymmetricDifference"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formSymmetricDifference(_:)-2ll2z",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formSymmetricDifference(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/formsymmetricdifference(_:)-2ll2z"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/formSymmetricDifference(_:)-391sm": {
  "abstract" : [
    {
      "text" : "Replace this set with the elements contained in this set or the given",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "sequence, but not both.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formSymmetricDifference"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formSymmetricDifference(_:)-391sm",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formSymmetricDifference(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/formsymmetricdifference(_:)-391sm"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/formSymmetricDifference(_:)-96csi": {
  "abstract" : [
    {
      "text" : "Replace this set with the elements contained in this set or the given",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "set, but not both.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formSymmetricDifference"
    },
    {
      "kind" : "text",
      "text" : "(`Self`"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formSymmetricDifference(_:)-96csi",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formSymmetricDifference(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/formsymmetricdifference(_:)-96csi"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/formUnion(_:)-3dkzw": {
  "abstract" : [
    {
      "text" : "Adds the elements of the given set to this set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formUnion"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formUnion(_:)-3dkzw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formUnion(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/formunion(_:)-3dkzw"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/formUnion(_:)-59end": {
  "abstract" : [
    {
      "text" : "Adds the elements of the given sequence to this set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formUnion"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formUnion(_:)-59end",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formUnion(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/formunion(_:)-59end"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/formUnion(_:)-6pksr": {
  "abstract" : [
    {
      "text" : "Adds the elements of the given set to this set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "formUnion"
    },
    {
      "kind" : "text",
      "text" : "(`Self`"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/formUnion(_:)-6pksr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "formUnion(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/formunion(_:)-6pksr"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/init()": {
  "abstract" : [
    {
      "text" : "Creates an empty set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/init()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/init(_:)-2d3a9": {
  "abstract" : [
    {
      "text" : "Creates a new set from the keys view of a dictionary.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SD",
      "text" : "Dictionary"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetVyACyxGSD4KeysVyxqd___Gclufc5ValueL_qd__mfp",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SD4KeysV",
      "text" : "Keys"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-2d3a9",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/init(_:)-2d3a9"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/init(_:)-3d7qr": {
  "abstract" : [
    {
      "text" : "Creates a new set from a collection of items.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sk",
      "text" : "RandomAccessCollection"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-3d7qr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/init(_:)-3d7qr"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/init(_:)-5zktd": {
  "abstract" : [
    {
      "text" : "Creates a new set from a finite sequence of items.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-5zktd",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/init(_:)-5zktd"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/init(_:)-68j7": {
  "abstract" : [
    {
      "text" : "Creates a new set from a an existing set. This is functionally the same as",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "copying the value of ",
      "type" : "text"
    },
    {
      "code" : "elements",
      "type" : "codeVoice"
    },
    {
      "text" : " into a new variable.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "(`Self`"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-68j7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/init(_:)-68j7"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/init(_:)-7rt2h": {
  "abstract" : [
    {
      "text" : "Create a new ordered set with the same members as the supplied",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "unordered view.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-7rt2h",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/init(_:)-7rt2h"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/init(_:)-8tli8": {
  "abstract" : [
    {
      "text" : "Creates a new set from an existing ",
      "type" : "text"
    },
    {
      "code" : "Set",
      "type" : "codeVoice"
    },
    {
      "text" : " value.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-8tli8",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/init(_:)-8tli8"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/init(_:)-8zm9d": {
  "abstract" : [
    {
      "text" : "Creates a new set from an existing slice of another set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV11SubSequenceV",
      "text" : "SubSequence"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(_:)-8zm9d",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/init(_:)-8zm9d"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/init(minimumCapacity:persistent:)": {
  "abstract" : [
    {
      "text" : "Creates an empty set with preallocated space for at least the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "specified number of elements.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "minimumCapacity"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "persistent"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(minimumCapacity:persistent:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(minimumCapacity:persistent:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/init(minimumcapacity:persistent:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/init(uncheckedUniqueElements:)": {
  "abstract" : [
    {
      "text" : "Creates a set with the contents of the given sequence, which",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "must not include duplicate elements.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "uncheckedUniqueElements"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/init(uncheckedUniqueElements:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(uncheckedUniqueElements:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/init(uncheckeduniqueelements:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/insert(_:at:)": {
  "abstract" : [
    {
      "text" : "Insert a new member to this set at the specified index, if the set doesn’t",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "already contain it.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "insert"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> (inserted"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", index"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/insert(_:at:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "insert(_:at:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/insert(_:at:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/intersection(_:)-4o09a": {
  "abstract" : [
    {
      "text" : "Returns a new set with the elements that are common to both this set and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the provided other one, in the order they appear in ",
      "type" : "text"
    },
    {
      "code" : "self",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "intersection"
    },
    {
      "kind" : "text",
      "text" : "(`Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/intersection(_:)-4o09a",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "intersection(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/intersection(_:)-4o09a"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/intersection(_:)-80md4": {
  "abstract" : [
    {
      "text" : "Returns a new set with the elements that are common to both this set and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the provided sequence, in the order they appear in ",
      "type" : "text"
    },
    {
      "code" : "self",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "intersection"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/intersection(_:)-80md4",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "intersection(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/intersection(_:)-80md4"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/intersection(_:)-9yzg3": {
  "abstract" : [
    {
      "text" : "Returns a new set with the elements that are common to both this set and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the provided other one, in the order they appear in ",
      "type" : "text"
    },
    {
      "code" : "self",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "intersection"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/intersection(_:)-9yzg3",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "intersection(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/intersection(_:)-9yzg3"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isDisjoint(with:)-4tsmx": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set has no members in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "common with the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isDisjoint"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isDisjoint(with:)-4tsmx",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isDisjoint(with:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isdisjoint(with:)-4tsmx"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isDisjoint(with:)-54iy6": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set has no members in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "common with the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isDisjoint"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isDisjoint(with:)-54iy6",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isDisjoint(with:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isdisjoint(with:)-54iy6"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isDisjoint(with:)-6vmoh": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set has no members in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "common with the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isDisjoint"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": `Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isDisjoint(with:)-6vmoh",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isDisjoint(with:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isdisjoint(with:)-6vmoh"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isDisjoint(with:)-7nqur": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set has no members in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "common with the given sequence.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isDisjoint"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isDisjoint(with:)-7nqur",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isDisjoint(with:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isdisjoint(with:)-7nqur"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isEqualSet(to:)-2bhxr": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value indicating whether an ordered set contains the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "same values as a given sequence, but not necessarily in the same",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "order.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isEqualSet"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isEqualSet(to:)-2bhxr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isEqualSet(to:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isequalset(to:)-2bhxr"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isEqualSet(to:)-34yz0": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value indicating whether two set values contain the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "same elements, but not necessarily in the same order.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isEqualSet"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isEqualSet(to:)-34yz0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isEqualSet(to:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isequalset(to:)-34yz0"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isEqualSet(to:)-6zqj7": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value indicating whether two set values contain the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "same elements, but not necessarily in the same order.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isEqualSet"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": `Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isEqualSet(to:)-6zqj7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isEqualSet(to:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isequalset(to:)-6zqj7"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isStrictSubset(of:)-10abw": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set is a strict subset",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of the given sequence.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isStrictSubset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSubset(of:)-10abw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isStrictSubset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isstrictsubset(of:)-10abw"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isStrictSubset(of:)-4efhn": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set is a strict subset",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isStrictSubset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSubset(of:)-4efhn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isStrictSubset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isstrictsubset(of:)-4efhn"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isStrictSubset(of:)-8m21h": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set is a strict subset",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isStrictSubset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": `Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSubset(of:)-8m21h",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isStrictSubset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isstrictsubset(of:)-8m21h"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isStrictSubset(of:)-9lv3x": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set is a strict subset",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isStrictSubset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSubset(of:)-9lv3x",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isStrictSubset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isstrictsubset(of:)-9lv3x"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isStrictSuperset(of:)-3kfwa": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set is a strict",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "superset of the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isStrictSuperset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSuperset(of:)-3kfwa",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isStrictSuperset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isstrictsuperset(of:)-3kfwa"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isStrictSuperset(of:)-5e6d5": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set is a strict",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "superset of the given sequence.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isStrictSuperset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSuperset(of:)-5e6d5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isStrictSuperset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isstrictsuperset(of:)-5e6d5"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isStrictSuperset(of:)-7u97x": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set is a strict",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "superset of the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isStrictSuperset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": `Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSuperset(of:)-7u97x",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isStrictSuperset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isstrictsuperset(of:)-7u97x"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isStrictSuperset(of:)-98d9s": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether the set is a strict",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "superset of the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isStrictSuperset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isStrictSuperset(of:)-98d9s",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isStrictSuperset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/isstrictsuperset(of:)-98d9s"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isSubset(of:)-3mw6r": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether this set is a subset of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isSubset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSubset(of:)-3mw6r",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isSubset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/issubset(of:)-3mw6r"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isSubset(of:)-8yb29": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether this set is a subset of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isSubset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSubset(of:)-8yb29",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isSubset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/issubset(of:)-8yb29"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isSubset(of:)-9hxl4": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether this set is a subset of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the elements in the given sequence.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isSubset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSubset(of:)-9hxl4",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isSubset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/issubset(of:)-9hxl4"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isSubset(of:)-ptij": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether this set is a subset of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isSubset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": `Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSubset(of:)-ptij",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isSubset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/issubset(of:)-ptij"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isSuperset(of:)-2bbv8": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether this set is a superset of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isSuperset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSuperset(of:)-2bbv8",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isSuperset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/issuperset(of:)-2bbv8"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isSuperset(of:)-4rrsh": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether this set is a superset of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isSuperset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": `Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSuperset(of:)-4rrsh",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isSuperset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/issuperset(of:)-4rrsh"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isSuperset(of:)-7oow7": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether this set is a superset of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given sequence.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isSuperset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSuperset(of:)-7oow7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isSuperset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/issuperset(of:)-7oow7"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/isSuperset(of:)-7xvog": {
  "abstract" : [
    {
      "text" : "Returns a Boolean value that indicates whether this set is a superset of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isSuperset"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/isSuperset(of:)-7xvog",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isSuperset(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/issuperset(of:)-7xvog"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/lastIndex(of:)": {
  "abstract" : [
    {
      "text" : "Returns the index of the given element in the set, or ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " if the element",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is not a member of the set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "lastIndex"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/lastIndex(of:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "lastIndex(of:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/lastindex(of:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/partition(by:)": {
  "abstract" : [
    {
      "text" : "Reorders the elements of the set such that all the elements that match the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "given predicate are after all the elements that don’t match.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "partition"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/partition(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "partition(by:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/partition(by:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/remove(_:)": {
  "abstract" : [
    {
      "text" : "Removes the given element from the set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "remove"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/remove(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "remove(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/remove(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/remove(at:)": {
  "abstract" : [
    {
      "text" : "Removes and returns the element at the specified position.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "remove"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> `Self`"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementa",
      "text" : "Element"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/remove(at:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "remove(at:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/remove(at:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/removeAll(keepingCapacity:)": {
  "abstract" : [
    {
      "text" : "Removes all members from the set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeAll"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "keepingCapacity"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeAll(keepingCapacity:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeAll(keepingCapacity:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/removeall(keepingcapacity:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/removeAll(where:)": {
  "abstract" : [
    {
      "text" : "Removes all the elements that satisfy the given predicate.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeAll"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "where"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeAll(where:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeAll(where:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/removeall(where:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/removeFirst()": {
  "abstract" : [
    {
      "text" : "Removes the first element of a non-empty set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeFirst"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeFirst()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeFirst()",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/removefirst()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/removeFirst(_:)": {
  "abstract" : [
    {
      "text" : "Removes the first ",
      "type" : "text"
    },
    {
      "code" : "n",
      "type" : "codeVoice"
    },
    {
      "text" : " elements of the set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeFirst"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeFirst(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeFirst(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/removefirst(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/removeLast()": {
  "abstract" : [
    {
      "text" : "Removes the last element of a non-empty set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeLast"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeLast()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeLast()",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/removelast()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/removeLast(_:)": {
  "abstract" : [
    {
      "text" : "Removes the last ",
      "type" : "text"
    },
    {
      "code" : "n",
      "type" : "codeVoice"
    },
    {
      "text" : " element of the set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeLast"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeLast(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeLast(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/removelast(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/removeSubrange(_:)-2fqke": {
  "abstract" : [
    {
      "text" : "Removes the specified subrange of elements from the collection.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeSubrange"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sn",
      "text" : "Range"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeSubrange(_:)-2fqke",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeSubrange(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/removesubrange(_:)-2fqke"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/removeSubrange(_:)-62u6a": {
  "abstract" : [
    {
      "text" : "Removes the specified subrange of elements from the collection.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeSubrange"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SX",
      "text" : "RangeExpression"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/removeSubrange(_:)-62u6a",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeSubrange(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/removesubrange(_:)-62u6a"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/reserveCapacity(_:)": {
  "abstract" : [
    {
      "text" : "Reserves enough space to store the specified number of elements.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reserveCapacity"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/reserveCapacity(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "reserveCapacity(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/reservecapacity(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/reverse()": {
  "abstract" : [
    {
      "text" : "Reverses the elements of the ordered set in place.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reverse"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/reverse()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "reverse()",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/reverse()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/shuffle()": {
  "abstract" : [
    {
      "text" : "Shuffles the collection in place.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "shuffle"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/shuffle()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "shuffle()",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/shuffle()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/shuffle(using:)": {
  "abstract" : [
    {
      "text" : "Shuffles the collection in place, using the given generator as a source",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for randomness.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "shuffle"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "using"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SG",
      "text" : "RandomNumberGenerator"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/shuffle(using:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "shuffle(using:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/shuffle(using:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/sort()": {
  "abstract" : [
    {
      "text" : "Sorts the set in place.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Comparable",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sort"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/sort()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sort()",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/sort()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/sort(by:)": {
  "abstract" : [
    {
      "text" : "Sorts the collection in place, using the given predicate as the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "comparison between elements.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sort"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/sort(by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sort(by:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/sort(by:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/subtract(_:)-3b6nj": {
  "abstract" : [
    {
      "text" : "Removes the elements of the given set from this set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "subtract"
    },
    {
      "kind" : "text",
      "text" : "(`Self`"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtract(_:)-3b6nj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subtract(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/subtract(_:)-3b6nj"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/subtract(_:)-9rtmd": {
  "abstract" : [
    {
      "text" : "Removes the elements of the given set from this set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "subtract"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtract(_:)-9rtmd",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subtract(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/subtract(_:)-9rtmd"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/subtract(_:)-9wmg8": {
  "abstract" : [
    {
      "text" : "Removes the elements of the given sequence from this set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "subtract"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtract(_:)-9wmg8",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subtract(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/subtract(_:)-9wmg8"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/subtracting(_:)-1gl4y": {
  "abstract" : [
    {
      "text" : "Returns a new set containing the elements of this set that do not occur",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in the given sequence.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "subtracting"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtracting(_:)-1gl4y",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subtracting(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/subtracting(_:)-1gl4y"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/subtracting(_:)-5graf": {
  "abstract" : [
    {
      "text" : "Returns a new set containing the elements of this set that do not occur",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "subtracting"
    },
    {
      "kind" : "text",
      "text" : "(`Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtracting(_:)-5graf",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subtracting(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/subtracting(_:)-5graf"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/subtracting(_:)-7kl8r": {
  "abstract" : [
    {
      "text" : "Returns a new set containing the elements of this set that do not occur",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "subtracting"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/subtracting(_:)-7kl8r",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subtracting(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/subtracting(_:)-7kl8r"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/swapAt(_:_:)": {
  "abstract" : [
    {
      "text" : "Exchanges the values at the specified indices of the set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "swapAt"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/swapAt(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "swapAt(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/swapat(_:_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/symmetricDifference(_:)-1810l": {
  "abstract" : [
    {
      "text" : "Returns a new set with the elements that are either in this set or in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    },
    {
      "text" : ", but not in both.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "symmetricDifference"
    },
    {
      "kind" : "text",
      "text" : "(`Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/symmetricDifference(_:)-1810l",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "symmetricDifference(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/symmetricdifference(_:)-1810l"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/symmetricDifference(_:)-8dvm6": {
  "abstract" : [
    {
      "text" : "Returns a new set with the elements that are either in this set or in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    },
    {
      "text" : ", but not in both.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "symmetricDifference"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/symmetricDifference(_:)-8dvm6",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "symmetricDifference(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/symmetricdifference(_:)-8dvm6"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/symmetricDifference(_:)-9huk7": {
  "abstract" : [
    {
      "text" : "Returns a new set with the elements that are either in this set or in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    },
    {
      "text" : ", but not in both.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "symmetricDifference"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/symmetricDifference(_:)-9huk7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "symmetricDifference(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/symmetricdifference(_:)-9huk7"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/union(_:)-2939h": {
  "abstract" : [
    {
      "text" : "Returns a new set with the elements of both this and the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "union"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/union(_:)-2939h",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "union(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/union(_:)-2939h"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/union(_:)-3lt5i": {
  "abstract" : [
    {
      "text" : "Returns a new set with the elements of both this and the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "union"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/union(_:)-3lt5i",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "union(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/union(_:)-3lt5i"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/union(_:)-67y2h": {
  "abstract" : [
    {
      "text" : "Returns a new set with the elements of both this and the given set.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "union"
    },
    {
      "kind" : "text",
      "text" : "(`Self`"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV",
      "text" : "OrderedSet"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/union(_:)-67y2h",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "union(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/union(_:)-67y2h"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/unordered": {
  "abstract" : [
    {
      "text" : "Access a view of the members of this set as an unordered",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "SetAlgebra",
      "type" : "codeVoice"
    },
    {
      "text" : " value.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unordered"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV13UnorderedViewV",
      "text" : "UnorderedView"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/unordered",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unordered",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/unordered"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/update(_:at:)": {
  "abstract" : [
    {
      "text" : "Replace the member at the given index with a new value that compares equal",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to it.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "update"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/update(_:at:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "update(_:at:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/update(_:at:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/updateOrAppend(_:)": {
  "abstract" : [
    {
      "text" : "Adds the given element to the set unconditionally, either appending it to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the set, or replacing an existing value if it’s already present.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateOrAppend"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/updateOrAppend(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "updateOrAppend(_:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/updateorappend(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/OrderedCollections/OrderedSet/updateOrInsert(_:at:)": {
  "abstract" : [
    {
      "text" : "Adds the given element into the set unconditionally, either inserting it",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "at the specified index, or replacing an existing value if it’s already",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "present.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateOrInsert"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> (originalMember"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18OrderedCollections0A3SetV7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "?, index"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/OrderedCollections\/OrderedSet\/updateOrInsert(_:at:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "updateOrInsert(_:at:)",
  "type" : "topic",
  "url" : "\/documentation\/orderedcollections\/orderedset\/updateorinsert(_:at:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/s17CustomReflectableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s17CustomReflectableP",
  "title" : "Swift.CustomReflectable",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/s25ExpressibleByArrayLiteralP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s25ExpressibleByArrayLiteralP",
  "title" : "Swift.ExpressibleByArrayLiteral",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/s28CustomDebugStringConvertibleP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s28CustomDebugStringConvertibleP",
  "title" : "Swift.CustomDebugStringConvertible",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}