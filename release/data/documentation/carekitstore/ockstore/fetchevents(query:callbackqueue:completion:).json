{
  "abstract" : [
    {
      "text" : "The completion will be called with an error if there’s an issue accessing the store or fetching results.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKStore",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKStore\/OCKReadOnlyEventStore-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKStore\/fetchEvents(query:callbackQueue:completion:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "conformance" : {
      "availabilityPrefix" : [
        {
          "text" : "Available when",
          "type" : "text"
        }
      ],
      "conformancePrefix" : [
        {
          "text" : "Conforms when",
          "type" : "text"
        }
      ],
      "constraints" : [
        {
          "code" : "Task",
          "type" : "codeVoice"
        },
        {
          "text" : " conforms to ",
          "type" : "text"
        },
        {
          "code" : "OCKAnyVersionableTask",
          "type" : "codeVoice"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ]
    },
    "extendedModule" : "CareKitStore",
    "externalID" : "s:12CareKitStore016OCKReadOnlyEventC0PA2A21OCKAnyVersionableTask0I0RpzrlE11fetchEvents5query13callbackQueue10completionyAA13OCKEventQueryV_So17OS_dispatch_queueCys6ResultOySayAA0P0VyAF7OutcomeQzGGAA13OCKStoreErrorOGctF::SYNTHESIZED::s:12CareKitStore8OCKStoreC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "fetchEvents"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "query"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:12CareKitStore13OCKEventQueryV",
        "text" : "OCKEventQuery"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "callbackQueue"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "c:objc(cs)OS_dispatch_queue",
        "text" : "DispatchQueue"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "completion"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:12CareKitStore16OCKResultClosurea",
        "text" : "OCKResultClosure"
      },
      {
        "kind" : "text",
        "text" : "<["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:12CareKitStore8OCKEventV",
        "text" : "OCKEvent"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:12CareKitStore015OCKReadableTaskC0P0E0Qa",
        "text" : "Task"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:12CareKitStore018OCKReadableOutcomeC0P0E0Qa",
        "text" : "Outcome"
      },
      {
        "kind" : "text",
        "text" : ">]>)"
      }
    ],
    "modules" : [
      {
        "name" : "CareKitStore"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "fetchEvents(query:callbackQueue:completion:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "fetchEvents"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "query"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKEventQuery",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:12CareKitStore13OCKEventQueryV",
              "text" : "OCKEventQuery"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "callbackQueue"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "c:objc(cs)OS_dispatch_queue",
              "text" : "DispatchQueue"
            },
            {
              "kind" : "text",
              "text" : " = .main, "
            },
            {
              "kind" : "externalParam",
              "text" : "completion"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "attribute",
              "text" : "@escaping"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKResultClosure",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:12CareKitStore16OCKResultClosurea",
              "text" : "OCKResultClosure"
            },
            {
              "kind" : "text",
              "text" : "<["
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKEvent",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:12CareKitStore8OCKEventV",
              "text" : "OCKEvent"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKReadableTaskStore\/Task",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:12CareKitStore015OCKReadableTaskC0P0E0Qa",
              "text" : "Task"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKReadableOutcomeStore\/Outcome",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:12CareKitStore018OCKReadableOutcomeC0P0E0Qa",
              "text" : "Outcome"
            },
            {
              "kind" : "text",
              "text" : ">]>)"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Used to match events in the store.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "query"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The queue that runs the completion. In most cases this should be the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "main queue.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "callbackQueue"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A callback that contains the result.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "completion"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The stream yields a new value whenever the result changes and yields an error if there’s an issue",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "accessing the store or fetching results.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The result will contain an event if the event occurs within the query interval ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "and",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " the task is effective in the query interval.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "A task is effective if its ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKAnyVersionableTask\/effectiveDate",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " lies in the query interval. The outcome",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "attached to the event will always be the most recent version available.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "This method will also walk through all versions of a task and compute the events for each version. The events will have the same",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKAnyTask\/id",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " but a unique ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKAnyTask\/uuid",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "It’s important to handle events from multiple task version with care. Suppose ",
              "type" : "text"
            },
            {
              "code" : "newTask",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "oldTask",
              "type" : "codeVoice"
            },
            {
              "text" : " are two versions of a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "task, where ",
              "type" : "text"
            },
            {
              "code" : "newTask.effectiveDate < oldTask.effectiveDate",
              "type" : "codeVoice"
            },
            {
              "text" : ". A few important caveats to consider include:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "If there exists an event for ",
                      "type" : "text"
                    },
                    {
                      "code" : "newTask",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " that overlaps with an event for ",
                      "type" : "text"
                    },
                    {
                      "code" : "oldTask",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", both events will be returned by this method.",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "Both events are relevant because at some point during each of their durations the associated task is effective, even if not for the",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "entire duration.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "If there exists an all-day event for ",
                      "type" : "text"
                    },
                    {
                      "code" : "newTask",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " and an all-day event for ",
                      "type" : "text"
                    },
                    {
                      "code" : "oldTask",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " on the same day, both events will",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "be returned by this method.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "orderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "Ultimately, be sure to consider the task when handling events returned by this method. If the task is akin to a medication,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "make sure the events are properly spaced out before presenting them to the user to ensure there is no risk of under-dosing or",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "over-dosing.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Events returned by this method will be sorted by their start date and task effective date.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/carekitstore\/ockstore\/fetchevents(query:callbackqueue:completion:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "CareKitStore",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKAnyTask/id": {
  "abstract" : [
    {
      "text" : "A user-defined unique identifier, typically human readable.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "id"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKAnyTask\/id",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "id",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockanytask\/id"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKAnyTask/uuid": {
  "abstract" : [
    {
      "text" : "An universally unique identifier for this task.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "uuid"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4UUIDV",
      "text" : "UUID"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKAnyTask\/uuid",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "uuid",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockanytask\/uuid"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKAnyVersionableTask/effectiveDate": {
  "abstract" : [
    {
      "text" : "A date specifying when this version of the task begins taking effect.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "effectiveDate"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DateV",
      "text" : "Date"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKAnyVersionableTask\/effectiveDate",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "effectiveDate",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockanyversionabletask\/effectivedate"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKEvent": {
  "abstract" : [
    {
      "text" : "An event that represents a single occasion that a task was scheduled to occur.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKEvent"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKEvent"
    }
  ],
  "role" : "symbol",
  "title" : "OCKEvent",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockevent"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKEventQuery": {
  "abstract" : [
    {
      "text" : "A query that limits which events will be returned when fetching.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKEventQuery"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKEventQuery",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKEventQuery"
    }
  ],
  "role" : "symbol",
  "title" : "OCKEventQuery",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockeventquery"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKReadableOutcomeStore/Outcome": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Outcome"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12CareKitStore13OCKAnyOutcomeP",
      "text" : "OCKAnyOutcome"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SQ",
      "text" : "Equatable"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12IdentifiableP",
      "text" : "Identifiable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKReadableOutcomeStore\/Outcome",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "Outcome",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockreadableoutcomestore\/outcome"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKReadableTaskStore/Task": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Task"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12CareKitStore10OCKAnyTaskP",
      "text" : "OCKAnyTask"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SQ",
      "text" : "Equatable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKReadableTaskStore\/Task",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "Task",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockreadabletaskstore\/task"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKResultClosure": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKResultClosure"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKResultClosure",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKResultClosure"
    }
  ],
  "role" : "symbol",
  "title" : "OCKResultClosure",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockresultclosure"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKStore": {
  "abstract" : [
    {
      "text" : "The default store used in CareKit. The underlying database used is CoreData.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKStore"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKStore",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKStore"
    }
  ],
  "role" : "symbol",
  "title" : "OCKStore",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockstore"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKStore/OCKReadOnlyEventStore-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKStore\/OCKReadOnlyEventStore-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "OCKReadOnlyEventStore Implementations",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockstore\/ockreadonlyeventstore-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/CareKitStore/OCKStore/fetchEvents(query:callbackQueue:completion:)": {
  "abstract" : [
    {
      "text" : "The completion will be called with an error if there’s an issue accessing the store or fetching results.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Task",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "OCKAnyVersionableTask",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "fetchEvents"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "query"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12CareKitStore13OCKEventQueryV",
      "text" : "OCKEventQuery"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "callbackQueue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)OS_dispatch_queue",
      "text" : "DispatchQueue"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12CareKitStore16OCKResultClosurea",
      "text" : "OCKResultClosure"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12CareKitStore8OCKEventV",
      "text" : "OCKEvent"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12CareKitStore015OCKReadableTaskC0P0E0Qa",
      "text" : "Task"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12CareKitStore018OCKReadableOutcomeC0P0E0Qa",
      "text" : "Outcome"
    },
    {
      "kind" : "text",
      "text" : ">]>)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/CareKitStore\/OCKStore\/fetchEvents(query:callbackQueue:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "fetchEvents(query:callbackQueue:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockstore\/fetchevents(query:callbackqueue:completion:)"
}
}
}