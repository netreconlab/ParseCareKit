{
  "abstract" : [
    {
      "text" : "Finds the first object on the server that has the same ",
      "type" : "text"
    },
    {
      "code" : "uuid",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit\/PCKHealthKitTask",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit\/PCKHealthKitTask\/PCKObjectable-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit\/PCKHealthKitTask\/first(_:options:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "ParseCareKit",
    "externalID" : "s:12ParseCareKit13PCKObjectablePAAE5first_7optionsx10Foundation4UUIDVSg_Shy0A5Swift3APIV6OptionOGtYaKFZ::SYNTHESIZED::s:12ParseCareKit09PCKHealthC4TaskV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "first"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10Foundation4UUIDV",
        "text" : "UUID"
      },
      {
        "kind" : "text",
        "text" : "?, "
      },
      {
        "kind" : "externalParam",
        "text" : "options"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10ParseSwift3APIV",
        "text" : "API"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10ParseSwift3APIV7Optionsa",
        "text" : "Options"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "async"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      }
    ],
    "modules" : [
      {
        "name" : "ParseCareKit"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Method",
    "symbolKind" : "method",
    "title" : "first(_:options:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "static"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "first"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "uuid"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10Foundation4UUIDV",
              "text" : "UUID"
            },
            {
              "kind" : "text",
              "text" : "?, "
            },
            {
              "kind" : "externalParam",
              "text" : "options"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/API",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10ParseSwift3APIV",
              "text" : "API"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/API\/Options",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10ParseSwift3APIV7Optionsa",
              "text" : "Options"
            },
            {
              "kind" : "text",
              "text" : " = []) "
            },
            {
              "kind" : "keyword",
              "text" : "async"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The UUID to search for.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "uuid"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A set of header options sent to the server. Defaults to an empty set.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "options"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "An object that has the same ",
                  "type" : "text"
                },
                {
                  "code" : "uuid",
                  "type" : "codeVoice"
                },
                {
                  "text" : " as the one being searched for.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "relatedObject"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The first object found with the matching ",
                  "type" : "text"
                },
                {
                  "code" : "uuid",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "returns"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "",
                  "type" : "text"
                },
                {
                  "code" : "ParseError",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "throws"
        }
      ]
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/parsecarekit\/pckhealthkittask\/first(_:options:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseCareKit": {
  "abstract" : [
    {
      "text" : "Seamlessly Synchronize CareKit 2.1+ data with a Parse Server.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ParseCareKit",
  "type" : "topic",
  "url" : "\/documentation\/parsecarekit"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseCareKit/PCKHealthKitTask": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "PCKHealthKitTask",
      "type" : "codeVoice"
    },
    {
      "text" : " is the ParseCareKit equivalent of ",
      "type" : "text"
    },
    {
      "code" : "OCKHealthKitTask",
      "type" : "codeVoice"
    },
    {
      "text" : ".  An ",
      "type" : "text"
    },
    {
      "code" : "OCKHealthKitTask",
      "type" : "codeVoice"
    },
    {
      "text" : " represents some task or action that a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "patient is supposed to perform. Tasks are optionally associable with an ",
      "type" : "text"
    },
    {
      "code" : "OCKCarePlan",
      "type" : "codeVoice"
    },
    {
      "text" : " and must have a unique",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "id and schedule. The schedule determines when and how often the task should be performed, and the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "impactsAdherence",
      "type" : "codeVoice"
    },
    {
      "text" : " flag may be used to specify whether or not the patients adherence to this task will affect",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "their daily completion rings.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PCKHealthKitTask"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit\/PCKHealthKitTask",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PCKHealthKitTask"
    }
  ],
  "role" : "symbol",
  "title" : "PCKHealthKitTask",
  "type" : "topic",
  "url" : "\/documentation\/parsecarekit\/pckhealthkittask"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseCareKit/PCKHealthKitTask/PCKObjectable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit\/PCKHealthKitTask\/PCKObjectable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "PCKObjectable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/parsecarekit\/pckhealthkittask\/pckobjectable-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseCareKit/PCKHealthKitTask/first(_:options:)": {
  "abstract" : [
    {
      "text" : "Finds the first object on the server that has the same ",
      "type" : "text"
    },
    {
      "code" : "uuid",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "first"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4UUIDV",
      "text" : "UUID"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "options"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift3APIV",
      "text" : "API"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift3APIV7Optionsa",
      "text" : "Options"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit\/PCKHealthKitTask\/first(_:options:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "first(_:options:)",
  "type" : "topic",
  "url" : "\/documentation\/parsecarekit\/pckhealthkittask\/first(_:options:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/API": {
  "abstract" : [
    {
      "text" : "The REST API for communicating with a Parse Server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "API"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/API",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "API"
    }
  ],
  "role" : "symbol",
  "title" : "API",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/api"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/API/Options": {
  "abstract" : [
    {
      "text" : "A type alias for the set of options.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Options"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/API\/Options",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Options"
    }
  ],
  "role" : "symbol",
  "title" : "API.Options",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/api\/options"
}
}
}