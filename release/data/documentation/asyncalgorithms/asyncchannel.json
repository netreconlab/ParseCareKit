{
  "abstract" : [
    {
      "text" : "A channel for sending elements from one task to another with back pressure.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:15AsyncAlgorithms0A7ChannelC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AsyncChannel"
      }
    ],
    "modules" : [
      {
        "name" : "AsyncAlgorithms"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "AsyncChannel"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "AsyncChannel"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "AsyncChannel"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s8SendableP",
              "text" : "Sendable"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "AsyncChannel",
              "type" : "codeVoice"
            },
            {
              "text" : " class is intended to be used as a communication type between tasks,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "particularly when one task produces values and another task consumes those values. The back",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "pressure applied by ",
              "type" : "text"
            },
            {
              "code" : "send(_:)",
              "type" : "codeVoice"
            },
            {
              "text" : " via the suspension\/resume ensures that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the production of values does not exceed the consumption of values from iteration. This method",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "suspends after enqueuing the event and is resumed when the next call to ",
              "type" : "text"
            },
            {
              "code" : "next()",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "on the ",
              "type" : "text"
            },
            {
              "code" : "Iterator",
              "type" : "codeVoice"
            },
            {
              "text" : " is made, or when ",
              "type" : "text"
            },
            {
              "code" : "finish()",
              "type" : "codeVoice"
            },
            {
              "text" : " is called from another Task.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "As ",
              "type" : "text"
            },
            {
              "code" : "finish()",
              "type" : "codeVoice"
            },
            {
              "text" : " induces a terminal state, there is no more need for a back pressure management.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "This function does not suspend and will finish all the pending iterations.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s8SendableP",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/Sci"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/Iterator"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/init()"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/finish()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/makeAsyncIterator()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/send(_:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/AsyncIterator",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/Element"
      ],
      "title" : "Type Aliases"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/AsyncSequence-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/asyncalgorithms\/asyncchannel"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseCareKit/Sci": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/Sci",
  "title" : "_Concurrency.AsyncSequence",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/AsyncAlgorithms": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "AsyncAlgorithms",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/AsyncAlgorithms/AsyncChannel": {
  "abstract" : [
    {
      "text" : "A channel for sending elements from one task to another with back pressure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncChannel"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncChannel"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncChannel",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchannel"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/AsyncAlgorithms/AsyncChannel/AsyncIterator": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncIterator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/AsyncIterator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncIterator"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncChannel.AsyncIterator",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchannel\/asynciterator"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/AsyncAlgorithms/AsyncChannel/AsyncSequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/AsyncSequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "AsyncSequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchannel\/asyncsequence-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/AsyncAlgorithms/AsyncChannel/Element": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Element"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/Element",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Element"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncChannel.Element",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchannel\/element"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/AsyncAlgorithms/AsyncChannel/Iterator": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Iterator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/Iterator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Iterator"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncChannel.Iterator",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchannel\/iterator"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/AsyncAlgorithms/AsyncChannel/finish()": {
  "abstract" : [
    {
      "text" : "Immediately resumes all the suspended operations.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "All subsequent calls to ",
      "type" : "text"
    },
    {
      "code" : "next(_:)",
      "type" : "codeVoice"
    },
    {
      "text" : " will resume immediately.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "finish"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/finish()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "finish()",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchannel\/finish()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/AsyncAlgorithms/AsyncChannel/init()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchannel\/init()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/AsyncAlgorithms/AsyncChannel/makeAsyncIterator()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "makeAsyncIterator"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncAlgorithms0A7ChannelC8IteratorV",
      "text" : "Iterator"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/makeAsyncIterator()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "makeAsyncIterator()",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchannel\/makeasynciterator()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/AsyncAlgorithms/AsyncChannel/send(_:)": {
  "abstract" : [
    {
      "text" : "Sends an element to an awaiting iteration. This function will resume when the next call to ",
      "type" : "text"
    },
    {
      "code" : "next()",
      "type" : "codeVoice"
    },
    {
      "text" : " is made",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "or when a call to ",
      "type" : "text"
    },
    {
      "code" : "finish()",
      "type" : "codeVoice"
    },
    {
      "text" : " is made from another task.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If the channel is already finished then this returns immediately.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If the task is cancelled, this function will resume without sending the element.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Other sending operations from other tasks will remain active.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "send"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncAlgorithms0A7ChannelC7Elementxmfp",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/AsyncAlgorithms\/AsyncChannel\/send(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "send(_:)",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchannel\/send(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/s8SendableP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}