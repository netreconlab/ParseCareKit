{
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " class enables two-way communication to a Parse Live Query",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Server.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "c:@M@ParseSwift@objc(cs)ParseLiveQuery",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ParseLiveQuery"
      }
    ],
    "modules" : [
      {
        "name" : "ParseSwift"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ParseLiveQuery"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "ParseLiveQuery"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ParseLiveQuery"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "In most cases, you should not call this class directly as a LiveQuery can be indirectly",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "created from ",
              "type" : "text"
            },
            {
              "code" : "Query",
              "type" : "codeVoice"
            },
            {
              "text" : " using:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "\/\/ If \"Message\" is a \"ParseObject\"",
            "let myQuery = Message.query(\"from\" == \"parse\")",
            "guard let subscription = try await myQuery.subscribe() else {",
            "    \"Error subscribing...\"",
            "    return",
            "}",
            "subscription.handleSubscribe { subscribedQuery, isNew in",
            "",
            "    \/\/Handle the subscription however you like.",
            "    if isNew {",
            "        print(\"Successfully subscribed to new query \\(subscribedQuery)\")",
            "    } else {",
            "        print(\"Successfully updated subscription to new query \\(subscribedQuery)\")",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The above creates a ",
              "type" : "text"
            },
            {
              "code" : "ParseLiveQuery",
              "type" : "codeVoice"
            },
            {
              "text" : " using either the ",
              "type" : "text"
            },
            {
              "code" : "liveQueryServerURL",
              "type" : "codeVoice"
            },
            {
              "text" : " (if it has been set)",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "or ",
              "type" : "text"
            },
            {
              "code" : "serverURL",
              "type" : "codeVoice"
            },
            {
              "text" : " when using ",
              "type" : "text"
            },
            {
              "code" : "ParseSwift.initialize",
              "type" : "codeVoice"
            },
            {
              "text" : ". All additional queries will be",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "created in the same way. The times you will want to initialize a new ",
              "type" : "text"
            },
            {
              "code" : "ParseLiveQuery",
              "type" : "codeVoice"
            },
            {
              "text" : " instance",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "are:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "If you want to become a ",
                      "type" : "text"
                    },
                    {
                      "code" : "ParseLiveQueryDelegate",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " to respond to authentification challenges",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "and\/or receive metrics and error messages for a ",
                      "type" : "text"
                    },
                    {
                      "code" : "ParseLiveQuery",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : "client.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "You have specific LiveQueries that need to subscribe to a server that have a different url than",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "the default.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "You want to change the default url for all LiveQuery connections when the app is already",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "running. Initializing new instances will create a new task\/connection to the ",
                      "type" : "text"
                    },
                    {
                      "code" : "ParseLiveQuery",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " server.",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "When an instance is deinitialized it will automatically close it is connection gracefully.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "orderedList"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/objc(cs)NSObject"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/objc(pl)NSObject",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s7CVarArgP",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s28CustomDebugStringConvertibleP",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s23CustomStringConvertibleP",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SQ",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SH"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/init(serverURL:isDefault:notificationQueue:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/authenticationDelegate",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/receiveDelegate",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/status"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/closeAll()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/isPendingSubscription(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/isSubscribed(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/open(isUserWantsToConnect:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/open(isUserWantsToConnect:completion:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/openPublisher(isUserWantsToConnect:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/removePendingSubscription(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/sendPing()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/sendPing(pongReceiveHandler:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/sendPingPublisher()",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/subscribe(_:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/client",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/defaultClient"
      ],
      "title" : "Type Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/ConnectionStatus"
      ],
      "title" : "Enumerations"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/LiveQuerySocketDelegate-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/parseswift\/parselivequery"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseCareKit/SH": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/SQ": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ParseSwift",
  "type" : "topic",
  "url" : "\/documentation\/parseswift"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " class enables two-way communication to a Parse Live Query",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseLiveQuery"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseLiveQuery"
    }
  ],
  "role" : "symbol",
  "title" : "ParseLiveQuery",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/ConnectionStatus": {
  "abstract" : [
    {
      "text" : "The connection status of LiveQuery",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ConnectionStatus"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/ConnectionStatus",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ConnectionStatus"
    }
  ],
  "role" : "symbol",
  "title" : "ParseLiveQuery.ConnectionStatus",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/connectionstatus"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/LiveQuerySocketDelegate-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/LiveQuerySocketDelegate-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "LiveQuerySocketDelegate Implementations",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/livequerysocketdelegate-implementations"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/authenticationDelegate": {
  "abstract" : [
    {
      "text" : "Have all ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " authentication challenges delegated to you. There can only",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "be one of these for all ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " connections. The default is to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "delegate to the ",
      "type" : "text"
    },
    {
      "code" : "authentication",
      "type" : "codeVoice"
    },
    {
      "text" : " call block passed to ",
      "type" : "text"
    },
    {
      "code" : "ParseSwift.initialize",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "or if there is not one, delegate to the OS. Conforms to ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQueryDelegate",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "authenticationDelegate"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A17LiveQueryDelegateP",
      "text" : "ParseLiveQueryDelegate"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/authenticationDelegate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "authenticationDelegate",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/authenticationdelegate"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/client": {
  "abstract" : [
    {
      "text" : "Current LiveQuery client.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "client"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@M@ParseSwift@objc(cs)ParseLiveQuery",
      "text" : "ParseLiveQuery"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/client",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "client",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/client"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/closeAll()": {
  "abstract" : [
    {
      "text" : "Manually disconnect all sessions and subscriptions from the ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " Server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "closeAll"
    },
    {
      "kind" : "text",
      "text" : "() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/closeAll()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "closeAll()",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/closeall()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/defaultClient": {
  "abstract" : [
    {
      "text" : "The default ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " client for all LiveQuery connections.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultClient"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@M@ParseSwift@objc(cs)ParseLiveQuery",
      "text" : "ParseLiveQuery"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/defaultClient",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultClient",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/defaultclient"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/init(serverURL:isDefault:notificationQueue:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "serverURL"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "isDefault"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "notificationQueue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)OS_dispatch_queue",
      "text" : "DispatchQueue"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/init(serverURL:isDefault:notificationQueue:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(serverURL:isDefault:notificationQueue:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/init(serverurl:isdefault:notificationqueue:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/isPendingSubscription(_:)": {
  "abstract" : [
    {
      "text" : "Check if a query has a pending subscription on this ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " client.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isPendingSubscription"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A9LiveQueryC21isPendingSubscriptionySbAA0D0VyxGYaKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/isPendingSubscription(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isPendingSubscription(_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/ispendingsubscription(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/isSubscribed(_:)": {
  "abstract" : [
    {
      "text" : "Check if a query has an active subscription on this ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " client.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isSubscribed"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A9LiveQueryC12isSubscribedySbAA0D0VyxGYaKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/isSubscribed(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isSubscribed(_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/issubscribed(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/open(isUserWantsToConnect:)": {
  "abstract" : [
    {
      "text" : "Manually establish a connection to the ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " Server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "open"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "isUserWantsToConnect"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/open(isUserWantsToConnect:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "open(isUserWantsToConnect:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/open(isuserwantstoconnect:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/open(isUserWantsToConnect:completion:)": {
  "abstract" : [
    {
      "text" : "Manually establish a connection to the ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " Server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "open"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "isUserWantsToConnect"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/open(isUserWantsToConnect:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "open(isUserWantsToConnect:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/open(isuserwantstoconnect:completion:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/openPublisher(isUserWantsToConnect:)": {
  "abstract" : [
    {
      "text" : "Manually establish a connection to the ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " Server. Publishes when established.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "openPublisher"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "isUserWantsToConnect"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine6FutureC",
      "text" : "Future"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/openPublisher(isUserWantsToConnect:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "openPublisher(isUserWantsToConnect:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/openpublisher(isuserwantstoconnect:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/receiveDelegate": {
  "abstract" : [
    {
      "text" : "Have ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " connection metrics, errors, etc delegated to you. A delegate",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "can be assigned to individual connections. Conforms to ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQueryDelegate",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "receiveDelegate"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A17LiveQueryDelegateP",
      "text" : "ParseLiveQueryDelegate"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/receiveDelegate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "receiveDelegate",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/receivedelegate"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/removePendingSubscription(_:)": {
  "abstract" : [
    {
      "text" : "Remove a pending subscription on this ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " client.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removePendingSubscription"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A9LiveQueryC25removePendingSubscriptionyyAA0D0VyxGYaKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/removePendingSubscription(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removePendingSubscription(_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/removependingsubscription(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/sendPing()": {
  "abstract" : [
    {
      "text" : "Sends a ping frame from the client side. Returns when a pong is received from the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "server endpoint.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sendPing"
    },
    {
      "kind" : "text",
      "text" : "() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/sendPing()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sendPing()",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/sendping()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/sendPing(pongReceiveHandler:)": {
  "abstract" : [
    {
      "text" : "Sends a ping frame from the client side, with a closure to receive the pong from the server endpoint.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sendPing"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "pongReceiveHandler"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/sendPing(pongReceiveHandler:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sendPing(pongReceiveHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/sendping(pongreceivehandler:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/sendPingPublisher()": {
  "abstract" : [
    {
      "text" : "Sends a ping frame from the client side. Publishes when a pong is received from the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "server endpoint.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sendPingPublisher"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine6FutureC",
      "text" : "Future"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/sendPingPublisher()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sendPingPublisher()",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/sendpingpublisher()"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/status": {
  "abstract" : [
    {
      "text" : "The current status of the LiveQuery socket.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "status"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A9LiveQueryC16ConnectionStatusO",
      "text" : "ConnectionStatus"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/status",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "status",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/status"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParseLiveQuery/subscribe(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "subscribe"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A9LiveQueryC9subscribeyxxYaKAA0D12SubscribableRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A9LiveQueryC9subscribeyxxYaKAA0D12SubscribableRzlF1TL_xmfp",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParseLiveQuery\/subscribe(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscribe(_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery\/subscribe(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/objc(cs)NSObject": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/objc(cs)NSObject",
  "title" : "ObjectiveC.NSObject",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/objc(pl)NSObject": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/objc(pl)NSObject",
  "title" : "ObjectiveC.NSObjectProtocol",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/s28CustomDebugStringConvertibleP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s28CustomDebugStringConvertibleP",
  "title" : "Swift.CustomDebugStringConvertible",
  "type" : "unresolvable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/s7CVarArgP": {
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/s7CVarArgP",
  "title" : "Swift.CVarArg",
  "type" : "unresolvable"
}
}
}