{
  "abstract" : [
    {
      "text" : "If the device is connected but idle, the message will",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "still be delivered right away unless the ",
      "type" : "text"
    },
    {
      "code" : "delayWhileIdle",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "flag is set to ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "true",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : ". Otherwise, it will be stored in the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "FCM servers until the device is awake. And that’s where",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the ",
      "type" : "text"
    },
    {
      "code" : "collapseKey",
      "type" : "codeVoice"
    },
    {
      "text" : " flag plays a role: if there is already a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "message with the same collapse key (and registration ID)",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "stored and waiting for delivery, the old message will be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "discarded and the new message will take its place",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "(that is, the old message will be collapsed by the new one).",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParsePushFirebasePayloadable"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParsePushFirebasePayloadable\/delayWhileIdle"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10ParseSwift0A23PushFirebasePayloadableP14delayWhileIdleSbSgvp",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "delayWhileIdle"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "modules" : [
      {
        "name" : "ParseSwift"
      }
    ],
    "required" : true,
    "role" : "symbol",
    "roleHeading" : "Instance Property",
    "symbolKind" : "property",
    "title" : "delayWhileIdle"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "var"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "delayWhileIdle"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : "? { "
            },
            {
              "kind" : "keyword",
              "text" : "get"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "set"
            },
            {
              "kind" : "text",
              "text" : " }"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/parseswift\/parsepushfirebasepayloadable\/delaywhileidle"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ParseSwift",
  "type" : "topic",
  "url" : "\/documentation\/parseswift"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParsePushFirebasePayloadable": {
  "abstract" : [
    {
      "text" : "A protocol for adding the standard properties for Firebase Cloud Messaging (FCM) push notifications.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParsePushFirebasePayloadable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParsePushFirebasePayloadable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParsePushFirebasePayloadable"
    }
  ],
  "role" : "symbol",
  "title" : "ParsePushFirebasePayloadable",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsepushfirebasepayloadable"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/ParsePushFirebasePayloadable/delayWhileIdle": {
  "abstract" : [
    {
      "text" : "If the device is connected but idle, the message will",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "still be delivered right away unless the ",
      "type" : "text"
    },
    {
      "code" : "delayWhileIdle",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "flag is set to ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "true",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : ". Otherwise, it will be stored in the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "FCM servers until the device is awake. And that’s where",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the ",
      "type" : "text"
    },
    {
      "code" : "collapseKey",
      "type" : "codeVoice"
    },
    {
      "text" : " flag plays a role: if there is already a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "message with the same collapse key (and registration ID)",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "stored and waiting for delivery, the old message will be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "discarded and the new message will take its place",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "(that is, the old message will be collapsed by the new one).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "delayWhileIdle"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/ParsePushFirebasePayloadable\/delayWhileIdle",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "delayWhileIdle",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsepushfirebasepayloadable\/delaywhileidle"
}
}
}