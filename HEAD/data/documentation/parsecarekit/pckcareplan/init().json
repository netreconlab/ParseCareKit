{
  "abstract" : [
    {
      "text" : "The default initializer to ensure all ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : "’s can be encoded\/decoded properly.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit\/PCKCarePlan"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit\/PCKCarePlan\/init()"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:12ParseCareKit11PCKCarePlanVACycfc",
    "fragments" : [
      {
        "kind" : "identifier",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "()"
      }
    ],
    "modules" : [
      {
        "name" : "ParseCareKit"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Initializer",
    "symbolKind" : "init",
    "title" : "init()"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "init"
            },
            {
              "kind" : "text",
              "text" : "()"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The compiler will give you this initialzer for free",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "(",
                  "type" : "text"
                },
                {
                  "identifier" : "https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Initialization.html",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : ")",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "as long as you declare all properties as ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "optional",
                      "type" : "text"
                    }
                  ],
                  "type" : "strong"
                },
                {
                  "text" : " (see ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "Warning",
                      "type" : "text"
                    }
                  ],
                  "type" : "strong"
                },
                {
                  "text" : " section) and you declare all other initializers in",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "an ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "extension",
                      "type" : "text"
                    }
                  ],
                  "type" : "strong"
                },
                {
                  "text" : ". See the ",
                  "type" : "text"
                },
                {
                  "identifier" : "https:\/\/github.com\/parse-community\/Parse-Swift\/blob\/c119033f44b91570997ad24f7b4b5af8e4d47b64\/ParseSwift.playground\/Pages\/1%20-%20Your%20first%20Object.xcplaygroundpage\/Contents.swift#L32-L66",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " for an example.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "style" : "important",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "It is required that all added properties be optional properties so they can eventually be used as",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "Parse ",
                  "type" : "text"
                },
                {
                  "code" : "Pointer",
                  "type" : "codeVoice"
                },
                {
                  "text" : "’s. If a developer really wants to have a required key, they should require it on the server-side or",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "create methods to check the respective properties on the client-side before saving objects. See",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "identifier" : "https:\/\/github.com\/parse-community\/Parse-Swift\/pull\/315#issuecomment-1014701003",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "for more information.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "style" : "warning",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/parsecarekit\/pckcareplan\/init()"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseCareKit": {
  "abstract" : [
    {
      "text" : "Seamlessly Synchronize CareKit 2.1+ data with a Parse Server.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ParseCareKit",
  "type" : "topic",
  "url" : "\/documentation\/parsecarekit"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseCareKit/PCKCarePlan": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "PCKCarePlan",
      "type" : "codeVoice"
    },
    {
      "text" : " is the ParseCareKit equivalent of ",
      "type" : "text"
    },
    {
      "code" : "OCKCarePlan",
      "type" : "codeVoice"
    },
    {
      "text" : ".  An ",
      "type" : "text"
    },
    {
      "code" : "OCKCarePlan",
      "type" : "codeVoice"
    },
    {
      "text" : " represents",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a set of tasks, including both interventions and assesments, that a patient is supposed to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "complete as part of his or her treatment for a specific condition. For example, a care plan for obesity",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "may include tasks requiring the patient to exercise, record their weight, and log meals. As the care",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "plan evolves with the patient’s progress, the care provider may modify the exercises and include notes each",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "time about why the changes were made.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PCKCarePlan"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit\/PCKCarePlan",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PCKCarePlan"
    }
  ],
  "role" : "symbol",
  "title" : "PCKCarePlan",
  "type" : "topic",
  "url" : "\/documentation\/parsecarekit\/pckcareplan"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseCareKit/PCKCarePlan/init()": {
  "abstract" : [
    {
      "text" : "The default initializer to ensure all ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : "’s can be encoded\/decoded properly.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseCareKit\/PCKCarePlan\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/parsecarekit\/pckcareplan\/init()"
},
"https://docs.swift.org/swift-book/LanguageGuide/Initialization.html": {
  "identifier" : "https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Initialization.html",
  "title" : "memberwise initializer",
  "titleInlineContent" : [
    {
      "text" : "memberwise initializer",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Initialization.html"
},
"https://github.com/parse-community/Parse-Swift/blob/c119033f44b91570997ad24f7b4b5af8e4d47b64/ParseSwift.playground/Pages/1%20-%20Your%20first%20Object.xcplaygroundpage/Contents.swift#L32-L66": {
  "identifier" : "https:\/\/github.com\/parse-community\/Parse-Swift\/blob\/c119033f44b91570997ad24f7b4b5af8e4d47b64\/ParseSwift.playground\/Pages\/1%20-%20Your%20first%20Object.xcplaygroundpage\/Contents.swift#L32-L66",
  "title" : "Playgrounds",
  "titleInlineContent" : [
    {
      "text" : "Playgrounds",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/parse-community\/Parse-Swift\/blob\/c119033f44b91570997ad24f7b4b5af8e4d47b64\/ParseSwift.playground\/Pages\/1%20-%20Your%20first%20Object.xcplaygroundpage\/Contents.swift#L32-L66"
},
"https://github.com/parse-community/Parse-Swift/pull/315#issuecomment-1014701003": {
  "identifier" : "https:\/\/github.com\/parse-community\/Parse-Swift\/pull\/315#issuecomment-1014701003",
  "title" : "here",
  "titleInlineContent" : [
    {
      "text" : "here",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/parse-community\/Parse-Swift\/pull\/315#issuecomment-1014701003"
}
}
}