{
  "abstract" : [
    {
      "text" : "No overview available.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/Subscription"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/Subscription\/QuerySubscribable-Implementations"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "ParseSwift"
      }
    ],
    "role" : "collectionGroup",
    "title" : "QuerySubscribable Implementations"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/Subscription\/didReceive(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/Subscription\/didSubscribe(_:)",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/Subscription\/didUnsubscribe()"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/parseswift\/subscription\/querysubscribable-implementations"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ParseSwift",
  "type" : "topic",
  "url" : "\/documentation\/parseswift"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/Subscription": {
  "abstract" : [
    {
      "text" : "A default implementation of the ",
      "type" : "text"
    },
    {
      "code" : "QuerySubscribable",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol. Suitable for ",
      "type" : "text"
    },
    {
      "code" : "ObjectObserved",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as the subscription can be used as a SwiftUI publisher. Meaning it can serve",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "indepedently as a ViewModel in MVVM. Also can be used as a Combine publisher. See Appleâ€™s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/developer.apple.com\/documentation\/combine\/observableobject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for more details.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Subscription"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/Subscription",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Subscription"
    }
  ],
  "role" : "symbol",
  "title" : "Subscription",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/subscription"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/Subscription/didReceive(_:)": {
  "abstract" : [
    {
      "text" : "Tells the handler that an event has been received from the ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " Server.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "T",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ParseObject",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didReceive"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/Subscription\/didReceive(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "didReceive(_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/subscription\/didreceive(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/Subscription/didSubscribe(_:)": {
  "abstract" : [
    {
      "text" : "Tells the handler that a query has been successfully registered with the server.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "T",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ParseObject",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didSubscribe"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/Subscription\/didSubscribe(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "didSubscribe(_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/subscription\/didsubscribe(_:)"
},
"doc://edu.uky.cs.netreconlab.ParseCareKit/documentation/ParseSwift/Subscription/didUnsubscribe()": {
  "abstract" : [
    {
      "text" : "Tells the handler that a query has been successfully deregistered from the server.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "T",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ParseObject",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "didUnsubscribe"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCareKit\/documentation\/ParseSwift\/Subscription\/didUnsubscribe()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "didUnsubscribe()",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/subscription\/didunsubscribe()"
},
"https://developer.apple.com/documentation/combine/observableobject": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/combine\/observableobject",
  "title" : "documentation",
  "titleInlineContent" : [
    {
      "text" : "documentation",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/combine\/observableobject"
}
}
}